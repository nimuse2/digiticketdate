{"ast":null,"code":"export function isValidDate(dateString) {\n  // First check for the pattern\n  if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false; // Parse the date parts to integers\n\n  var parts = dateString.split(\"/\");\n  var day = parseInt(parts[1], 10);\n  var month = parseInt(parts[0], 10);\n  var year = parseInt(parts[2], 10); // Check the ranges of month and year\n\n  if (year < 1000 || year > 3000 || month === 0 || month > 12) return false;\n  var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Adjust for leap years\n\n  if (year % 400 === 0 || year % 100 !== 0 && year % 4 === 0) monthLength[1] = 29; // Check the range of the day\n\n  return day > 0 && day <= monthLength[month - 1];\n}\n;","map":{"version":3,"sources":["/Users/nickwalters/DIGITICKETS/digitickets/src/js/functions.js"],"names":["isValidDate","dateString","test","parts","split","day","parseInt","month","year","monthLength"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,UAArB,EACH;AACI;AACA,MAAG,CAAC,4BAA4BC,IAA5B,CAAiCD,UAAjC,CAAJ,EACI,OAAO,KAAP,CAHR,CAKI;;AACA,MAAIE,KAAK,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAZ;AACA,MAAIC,GAAG,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAlB;AACA,MAAII,KAAK,GAAGD,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAApB;AACA,MAAIK,IAAI,GAAGF,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAnB,CATJ,CAWI;;AACA,MAAGK,IAAI,GAAG,IAAP,IAAeA,IAAI,GAAG,IAAtB,IAA8BD,KAAK,KAAK,CAAxC,IAA6CA,KAAK,GAAG,EAAxD,EACI,OAAO,KAAP;AAEJ,MAAIE,WAAW,GAAG,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,CAAlB,CAfJ,CAiBI;;AACA,MAAGD,IAAI,GAAG,GAAP,KAAe,CAAf,IAAqBA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,CAAP,KAAa,CAAzD,EACIC,WAAW,CAAC,CAAD,CAAX,GAAiB,EAAjB,CAnBR,CAqBI;;AACA,SAAOJ,GAAG,GAAG,CAAN,IAAWA,GAAG,IAAII,WAAW,CAACF,KAAK,GAAG,CAAT,CAApC;AACH;AAAA","sourcesContent":["export function isValidDate(dateString)\n    {\n        // First check for the pattern\n        if(!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString))\n            return false;\n\n        // Parse the date parts to integers\n        var parts = dateString.split(\"/\");\n        var day = parseInt(parts[1], 10);\n        var month = parseInt(parts[0], 10);\n        var year = parseInt(parts[2], 10);\n\n        // Check the ranges of month and year\n        if(year < 1000 || year > 3000 || month === 0 || month > 12)\n            return false;\n\n        var monthLength = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\n        // Adjust for leap years\n        if(year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0))\n            monthLength[1] = 29;\n\n        // Check the range of the day\n        return day > 0 && day <= monthLength[month - 1];\n    };\n\n    "]},"metadata":{},"sourceType":"module"}